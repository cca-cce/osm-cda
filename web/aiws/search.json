[
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "Dey (2018)\n\n\n\n\n\n\n\nLakshmanan, G√∂rner, and Gillard (2021)\n\n\n\n\n\n\n\nVasilev (2019)"
  },
  {
    "objectID": "resources.html#computational-content-analysis-computer-vision",
    "href": "resources.html#computational-content-analysis-computer-vision",
    "title": "Resources",
    "section": "",
    "text": "Dey (2018)\n\n\n\n\n\n\n\nLakshmanan, G√∂rner, and Gillard (2021)\n\n\n\n\n\n\n\nVasilev (2019)"
  },
  {
    "objectID": "resources.html#computational-content-analysis-natural-language-processing",
    "href": "resources.html#computational-content-analysis-natural-language-processing",
    "title": "Resources",
    "section": "computational content analysis, natural language processing",
    "text": "computational content analysis, natural language processing\n\n\n\n\n\n\n\n\n\nVasiliev (2020)\n\n\n\n\n\n\n\nTunstall, Von Werra, and Wolf (2022)\n\n\n\n\n\n\n\nSzeliski (2010)"
  },
  {
    "objectID": "resources.html#computational-data-analysis",
    "href": "resources.html#computational-data-analysis",
    "title": "Resources",
    "section": "computational data analysis",
    "text": "computational data analysis\n\n\n\n\n\n\n\n\n\nMcKinney (2022)\n\n\n\n\n\n\n\n(some-test?)\n\n\n\n\n\n\n\n(some-test?)"
  },
  {
    "objectID": "resources.html#course-literature",
    "href": "resources.html#course-literature",
    "title": "Resources",
    "section": "course literature",
    "text": "course literature\n\n\n\n\n\n\n\n\n\nNeuendorf (2017)\n\n\n\n\n\n\n\nKedia and Rasu (2020)\n\n\n\n\n\n\n\nSzeliski (2010)"
  },
  {
    "objectID": "resources.html#websites-and-apps",
    "href": "resources.html#websites-and-apps",
    "title": "Resources",
    "section": "websites and apps",
    "text": "websites and apps\n\nhttps://www.python.org/downloads/\nhttps://wiki.python.org/moin/BeginnersGuide\nhttps://www.anaconda.com/products/individual\nhttps://code.visualstudio.com/download\nhttps://github.com/jupyterlab/jupyterlab_app#download\nhttps://trinket.io/home"
  },
  {
    "objectID": "resources.html#online-articles",
    "href": "resources.html#online-articles",
    "title": "Resources",
    "section": "online articles",
    "text": "online articles\n\nsome text here Kedia and Rasu (2020)"
  },
  {
    "objectID": "aiws-241022.html",
    "href": "aiws-241022.html",
    "title": "Workshop 241022",
    "section": "",
    "text": "Vi √§r ekonomer och HR-personal och de flesta kan v√§ldigt lite om AI och anv√§nder det inte. I b√§sta fall anv√§nder n√•gra ibland chatgpt eller copilot men inget systematiskt.\nJag skulle g√§rna vilja att ni inspirerar oss üòä och skapar nyfikenhet s√• att vi kan b√∂rja hitta omr√•den d√§r vi kan ta hj√§lp av AI."
  },
  {
    "objectID": "aiws-241022.html#ai-for-admins",
    "href": "aiws-241022.html#ai-for-admins",
    "title": "Workshop 241022",
    "section": "ai for admins",
    "text": "ai for admins\n\nchat with your spreadsheets\nchat with your text documents"
  },
  {
    "objectID": "aiws-241022.html#lecture",
    "href": "aiws-241022.html#lecture",
    "title": "Workshop 241022",
    "section": "lecture",
    "text": "lecture\n\noct 22 at 15-16\nnils 15.00-15.30, analytical ai\nilkin 15.30-16.00, generative ai\npresentation slides\nzoom projector presentation"
  },
  {
    "objectID": "aiws-241022.html#workshop",
    "href": "aiws-241022.html#workshop",
    "title": "Workshop 241022",
    "section": "workshop",
    "text": "workshop\n\noct 22 at 16-17\njoint zoom meeting\n\n\nanalytical ai (nils)\n\nworkshop spreadsheet\nlog in to personal google account\n\n\n\nprompt:\nl√§s data fr√•n denna webb adress ‚Äúhttps://github.com/cca-cce/osm-cda/raw/refs/heads/main/csv/aiws-241022.xlsx‚Äù; anv√§nd det tredje kalkylbladet f√∂r att skapa objektet df; visa sedan dom 15 f√∂rsta raderna i df\n\nimport pandas as pd\n\n# L√§s in det tredje kalkylbladet (sheet_name=2) fr√•n den angivna adressen\ndf = pd.read_excel(\"https://github.com/cca-cce/osm-cda/raw/refs/heads/main/csv/aiws-241022.xlsx\", sheet_name=2)\n\n# Visa de 15 f√∂rsta raderna i df\ndf.head(15)\n\n\n\n\n\n\n\n\nYear\nCategory\nProduct\nSales\nRating\n\n\n\n\n0\n2017\nComponents\nChains\n20000\n0.75\n\n\n1\n2015\nClothing\nSocks\n3700\n0.22\n\n\n2\n2017\nClothing\nBib-Shorts\n4000\n0.22\n\n\n3\n2015\nClothing\nShorts\n13300\n0.56\n\n\n4\n2017\nClothing\nTights\n36000\n1.00\n\n\n5\n2015\nComponents\nHandlebars\n2300\n0.35\n\n\n6\n2016\nClothing\nSocks\n2300\n0.28\n\n\n7\n2016\nComponents\nBrakes\n3400\n0.36\n\n\n8\n2016\nBikes\nMountain Bikes\n6300\n0.40\n\n\n9\n2017\nComponents\nBrakes\n5400\n0.38\n\n\n10\n2016\nAccessories\nHelmets\n17000\n0.90\n\n\n11\n2016\nAccessories\nLights\n21600\n0.90\n\n\n12\n2016\nAccessories\nLocks\n29800\n0.90\n\n\n13\n2016\nComponents\nBottom Brackets\n1000\n0.23\n\n\n14\n2015\nClothing\nJerseys\n6700\n0.05\n\n\n\n\n\n\n\n\n\nprompt:\nskapa en ny variabel ‚ÄúYear_Categorical‚Äù d√§r v√§rdet av ‚ÄúYear‚Äù representeras som en str√§ng och sortera raderna i stigande ordning efter denna variabel\n\n# Convert 'Year' to string and sort the DataFrame\ndf['Year_Categorical'] = df['Year'].astype(str)\ndf_sorted = df.sort_values('Year_Categorical')\n\n\n\nprompt:\nskapa ett nytt data objekt kallat ‚Äúmean_sales_by_year‚Äù med medelv√§rde av ‚ÄúSales‚Äù f√∂r varje v√§rde av ‚ÄúYear_Categorical‚Äù; skapa sedan ett stapeldiagram som visar sambandet mellan medelv√§rde av ‚ÄúSales‚Äù och ‚ÄúYear_Categorical‚Äù\n\n# Calculate the mean sales for each year\nmean_sales_by_year = df_sorted.groupby('Year_Categorical')['Sales'].mean()\n\n# Create a bar chart\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(10, 6))\nplt.bar(mean_sales_by_year.index, mean_sales_by_year.values)\nplt.xlabel('Year')\nplt.ylabel('Mean Sales')\nplt.title('Mean Sales by Year')\nplt.show()\n\n\n\n\n\n\n\n\n\n\nprompt:\nunders√∂k om det finns ett statistiskt s√§kerst√§llt samband mellan medelv√§rde av ‚ÄúSales‚Äù och ‚ÄúYear‚Äù representerat som numerisk variabel; f√∂rklara styrkan och riktningen p√• sambandet\n\nimport pandas as pd\nimport statsmodels.formula.api as sm\nimport matplotlib.pyplot as plt\n\n# Utf√∂r en regressionsanalys f√∂r att unders√∂ka sambandet mellan Sales och Year\nmodel = sm.ols('Sales ~ Year', data=df).fit()\n\n# F√∂rklara styrkan och riktningen p√• sambandet baserat p√• regressionsresultatet\nif model.pvalues['Year'] &lt; 0.05:\n  print(\"Det finns ett statistiskt s√§kerst√§llt samband mellan medelv√§rdet av Sales och Year.\")\n  if model.params['Year'] &gt; 0:\n    print(\"Sambandet √§r positivt, vilket inneb√§r att h√∂gre v√§rden p√• Year tenderar att korrelera med h√∂gre medelv√§rden p√• Sales.\")\n  else:\n    print(\"Sambandet √§r negativt, vilket inneb√§r att h√∂gre v√§rden p√• Year tenderar att korrelera med l√§gre medelv√§rden p√• Sales.\")\n\n  # Ber√§kna korrelationskoefficienten f√∂r att m√§ta styrkan p√• sambandet\n  correlation = df['Sales'].corr(df['Year'])\n  print(f\"Korrelationskoefficienten √§r: {correlation}\")\n\n  if abs(correlation) &gt;= 0.7:\n    print(\"Sambandet √§r starkt.\")\n  elif abs(correlation) &gt;= 0.3:\n    print(\"Sambandet √§r m√•ttligt.\")\n  else:\n    print(\"Sambandet √§r svagt.\")\n\nelse:\n  print(\"Det finns inget statistiskt s√§kerst√§llt samband mellan medelv√§rdet av Sales och Year.\")\n\nDet finns ett statistiskt s√§kerst√§llt samband mellan medelv√§rdet av Sales och Year.\nSambandet √§r positivt, vilket inneb√§r att h√∂gre v√§rden p√• Year tenderar att korrelera med h√∂gre medelv√§rden p√• Sales.\nKorrelationskoefficienten √§r: 0.4492036850599069\nSambandet √§r m√•ttligt.\n\n\n\n\nprompt:\nvisualisera sambandet mellan ‚ÄúSales‚Äù och ‚ÄúYear‚Äù representerat som numerisk variabel med hj√§lp av ett punkt diagram med r√∂d trendlinje\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Assuming 'df' is your DataFrame with 'Sales' and 'Year' columns\n\n# Create a scatter plot\nplt.figure(figsize=(10, 6))\nplt.scatter(df['Year'], df['Sales'])\nplt.xlabel('Year')\nplt.ylabel('Sales')\nplt.title('Sales vs. Year')\n\n# Add a red trendline\nz = np.polyfit(df['Year'], df['Sales'], 1)\np = np.poly1d(z)\nplt.plot(df['Year'], p(df['Year']), \"r--\")\n\nplt.show()\n\n\n\n\n\n\n\n\n\n\nprompt:\nspara det nya objektet ‚Äúmean_sales_by_year‚Äù till en datafil av typen xlsx\n\n# Spara mean_sales_by_year till en xlsx-fil\n#mean_sales_by_year.to_excel('mean_sales_by_year.xlsx')\n\n\n\n\ngenerative ai (ilkin)"
  },
  {
    "objectID": "aiws-241022.html#overview-ai-for-hr",
    "href": "aiws-241022.html#overview-ai-for-hr",
    "title": "Workshop 241022",
    "section": "overview, ai for hr",
    "text": "overview, ai for hr\n\nget help by using screenshots\nuse low-code programming"
  },
  {
    "objectID": "aiws-241022.html#ai-vs.-automation",
    "href": "aiws-241022.html#ai-vs.-automation",
    "title": "Workshop 241022",
    "section": "ai vs.¬†automation",
    "text": "ai vs.¬†automation"
  },
  {
    "objectID": "about.html#nils-holmberg",
    "href": "about.html#nils-holmberg",
    "title": "About",
    "section": "Nils Holmberg",
    "text": "Nils Holmberg\n\nlucris"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "osm-aiws",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]